#!/bin/bash

# This tool helps to generate tls certificates

CERT_FILE=$1
KEY_FILE=$2
CA_CERT_FILE=$3
CA_KEY_FILE=$4

# Some defaults
SSL_CA_CSR_COUNTRY=${SSL_CA_CSR_COUNTRY:-"DE"}
SSL_CA_CSR_STATE=${SSL_CA_CSR_STATE:-"Bavaria"}
SSL_CA_CSR_ORGANIZATION_UNIT=${SSL_CA_CSR_ORGANIZATION_UNIT:-"Dummy CA"}
SSL_CA_CSR_CN=${SSL_CA_CSR_CN:-"$(hostname -f)"}
SSL_ORGANIZATION_UNIT=${SSL_ORGANIZATION_UNIT:-"Server Certificate"}

if [ -z "${CERT_FILE}" ] || [ -z "${KEY_FILE}" ] || [ -z "${CA_CERT_FILE}" ] || [ -z "${CA_KEY_FILE}" ]; then
    echo "Usage: ssl-helper cert_file key_file ca_cert_file ca_key_file" >&2
    exit 1
fi

if [ ! -e "${CA_CERT_FILE}" ]; then
    echo "No CA cert file found, generating one"

    if [ ! -e "${CA_KEY_FILE}" ]; then
        echo "Generating private CA key..."
	# RSA: openssl genrsa -out "${CA_KEY_FILE}" 4096
	# ecdsa 384:
	openssl ecparam -genkey -name secp384r1 -noout -out "${CA_KEY_FILE}"
	chmod 600 "${CA_KEY_FILE}"
    fi

    echo "Generating CA certificate..."
    openssl req -x509 -new -nodes -key "${CA_KEY_FILE}" -sha256 -days 1024 \
	    -subj "/C=${SSL_CA_CSR_COUNTRY}/ST=${SSL_CA_CSR_STATE}/O=${SSL_CA_CSR_ORGANIZATION_UNIT}/CN=${SSL_CA_CSR_CN}" \
	    -out "${CA_CERT_FILE}"
fi

if [ ! -e "${CERT_FILE}" ] && [ ! -e "${KEY_FILE}" ]; then

    function buildExtCnf() {
	cat << EOF > "${WORKDIR}/v3.ext"
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = localhost
EOF

	if [ -n "${HOSTNAME}" ]; then
	    echo "DNS.2 = ${HOSTNAME}" >> "${WORKDIR}/v3.ext"
	else
	    echo "DNS.2 = $(hostname -f)" >> "${WORKDIR}/v3.ext"
	    echo "DNS.3 = $(hostname)" >> "${WORKDIR}/v3.ext"
	fi
    }

    echo "No certificate file and certificate key provided, generate:"
    echo "${CERT_FILE} and ${KEY_FILE}"

    WORKDIR="$(mktemp -d)"

    buildExtCnf

    echo "Generating certificate key..."
    openssl genrsa -out "${KEY_FILE}" 2048
    echo "Generating sign request..."
    openssl req -new -sha256 -key "${KEY_FILE}" \
	    -subj "/O=${SSL_ORGANIZATION_UNIT}/CN=${HOSTNAME}" \
	    -out "${WORKDIR}/cert.csr"

    echo "Generating certificate..."
    openssl x509 -req -in "${WORKDIR}/cert.csr" -CA "${CA_CERT_FILE}" \
	    -CAkey "${CA_KEY_FILE}" -CAcreateserial -days 365 -sha256 \
	    -extfile "${WORKDIR}/v3.ext" \
	    -out "${CERT_FILE}"

    rm -rf "${WORKDIR}"

elif [ ! -e "${KEY_FILE}" ]; then
    echo "ERROR: Certificate file ${CERT_FILE} exists but not key file ${KEY_FILE}" >&2
    exit 1
elif [ ! -e "${CERT_FILE}" ]; then
    echo "ERROR: Key file ${KEY_FILE} exists but not certificate file ${CERT_FILE}" >&2
    exit 1
else
    echo "Files ${CERT_FILE} and ${KEY_FILE} exists, do nothing..."
fi
